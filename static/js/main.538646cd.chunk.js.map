{"version":3,"sources":["components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","App.js","index.js"],"names":["module","exports","ContactList","contacts","deleteContact","className","css","contactList","map","contact","contactListItem","name","number","type","onClick","id","ContactForm","state","nameInputId","shortid","generate","numberInputId","handleChange","event","setState","target","value","reset","handleSubmit","preventDefault","props","onAdd","onSubmit","this","label","pattern","title","required","onChange","placeholder","input_name","add_btn","Component","Filter","valueState","filterByName","App","filter","contactId","prevState","addContact","some","alert","currentTarget","localStorage","getItem","parsedContacts","JSON","parse","prevProps","console","log","setItem","stringify","normalizedThisFilterState","toLowerCase","visibleContacts","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.538646cd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__qpB88\",\"contactListItem\":\"ContactList_contactListItem__ju1sP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactForm\":\"ContactForm_ContactForm__1ESFJ\",\"label\":\"ContactForm_label__c5LJt\",\"input_name\":\"ContactForm_input_name__2dMzC\",\"add_btn\":\"ContactForm_add_btn__1EjkK\"};","import React from 'react';\r\nimport css from './ContactList.module.css'\r\n\r\nconst ContactList = ({contacts, deleteContact}) => (\r\n  <ul className={css.contactList}>\r\n          {contacts.map(contact => \r\n            <li className={css.contactListItem} >\r\n              <p>{contact.name}</p>\r\n              <p>{contact.number}</p>\r\n              <button type=\"button\" onClick={() => deleteContact(contact.id)}>Delete contact</button>\r\n            </li>)\r\n          }\r\n          \r\n        \r\n</ul>\r\n)\r\n\r\nexport default ContactList;\r\n","import React, { Component } from 'react';\r\nimport shortid from 'shortid';\r\nimport css from './ContactForm.module.css'\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: ''\r\n  }\r\n  nameInputId = shortid.generate();\r\n  numberInputId = shortid.generate();\r\n\r\n  handleChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  // handleChange = event => {\r\n  //   const {name, value} = event.currentTarget\r\n\r\n  //   this.setState({\r\n  //     [name]: value,\r\n  //   });\r\n  // };\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    this.props.onAdd(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit} className={css.ContactForm}>\r\n      <label className={css.label} >\r\n        Name:\r\n        <input\r\n            id={this.nameInputId}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            onChange={this.handleChange}\r\n            // className={css.input_name}\r\n            placeholder=\"Input name\"\r\n        />\r\n      </label>\r\n      <label label className={css.label} >\r\n        Phone number:\r\n           <input\r\n          id={this.numberInputId}\r\n          type=\"number\"\r\n          name=\"number\"\r\n          value={this.state.number}\r\n          pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\r\n          title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\r\n          required\r\n          onChange={this.handleChange}\r\n          className={css.input_name}\r\n          placeholder=\"Input number\"\r\n        />\r\n            \r\n      </label>\r\n\r\n        <button type='submit' className={css.add_btn}>Add contact</button>\r\n        \r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ContactForm;","import React from 'react'\r\nimport './Filter.css'\r\n\r\nconst Filter = ({valueState, filterByName}) => {\r\n  return (\r\n    <label className=\"label\" >\r\n      <input type=\"text\" value={valueState} onChange={filterByName}/>\r\n      \r\n    </label>\r\n  )\r\n}\r\n\r\nexport default Filter;","import { Component } from \"react\";\nimport ContactList from './components/ContactList/ContactList.jsx'\nimport ContactForm from './components/ContactForm/ContactForm.jsx'\nimport Filter from './components/Filter/Filter.jsx'\nimport shortid from 'shortid';\n\n\nclass App extends Component {\n  state = {\n  contacts: [\n    {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\n    {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\n    {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\n    {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\n  ],\n  filter: '',\n  name: '',\n  number: '',\n  }\n  \n  deleteContact = (contactId) => {\n    this.setState(\n      prevState => ({contacts: prevState.contacts.filter(contact => contactId !== contact.id)})\n    )\n  \n  }\n  \n  addContact = ({ name, number }) => {\n    if (this.state.contacts.some(contact => contact.name === name)) {\n      alert(`${name} is already in contacts.`);\n      return;\n    }\n    const contact = { id: shortid.generate(), name, number };\n    this.setState(\n      prevState => ({ contacts: [contact, ...prevState.contacts] })\n    );\n   \n  };\n  \n  filter = (event) => {\n    this.setState(\n      {\n        filter: event.currentTarget.value\n      }\n    )\n  }\n  \n  componentDidMount() {\n    const contacts = localStorage.getItem(\"contacts\");\n    const parsedContacts = JSON.parse(contacts);\n    \n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n    \n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log(\"App componentDidUpdate\");\n\n    if (this.state.contacts !== prevState.contacts) {\n      console.log(\"Updated field contacts\");\n\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n\n  }\n\n  render() {\n    const normalizedThisFilterState = this.state.filter.toLowerCase();\n    const visibleContacts = this.state.contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedThisFilterState),\n    );\n    return (\n     <>\n     \n      \n        <ContactForm onAdd={ this.addContact}/>\n        \n        <ContactList contacts={visibleContacts} deleteContact={this.deleteContact} />\n        \n        <Filter valueState={this.state.filter} filterByName={ this.filter}/>\n  \n    \n</>\n      \n    )\n  }\n}\n\n\n  \n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}